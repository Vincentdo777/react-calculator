{"version":3,"sources":["component/App.js","component/Button.js","component/Output.js","component/Formula.js","index.js"],"names":["endsWithOperator","endWithNegativeSign","isOperator","App","useState","currentValue","setValue","formula","setFormula","preval","setPreval","evaluated","setEvaluate","maxDigitWarning","handleEvaluate","includes","expression","test","slice","replace","answer","Math","round","eval","toString","handleOperator","e","value","target","handleNumbers","length","handleDecimal","match","initialize","className","id","clear","numbers","operators","evaluate","decimal","Button","props","onClick","Output","Formular","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c76924d.chunk.js","sourcesContent":["import React,{useState} from 'react';\nimport Button from './Button';\nimport Output from './Output';\nimport Formula from './Formula';\nimport './App.css';\n\n/* eslint-disable react/prop-types, react/no-multi-comp,\n no-eval, no-nested-ternary */\n\nconst endsWithOperator = /[x+‑/]$/,\n      endWithNegativeSign = /[+/x]‑$/,\n      isOperator = /[x/+‑]/  \n;\n\nexport default function App() {\n  const [currentValue, setValue] = useState('0');\n  const [formula, setFormula] = useState('');\n  const [preval, setPreval] = useState('0');\n  const [evaluated, setEvaluate] = useState(false);\n  \n\n  function maxDigitWarning(){\n    setValue('Limit');\n  }\n  function handleEvaluate(){\n\n    if(!currentValue.includes('Limit')){\n      let expression = formula;\n      while(endsWithOperator.test(expression)){\n        expression = expression.slice(0, -1);\n      }\n      expression = expression.replace(/x/g, '*').replace(/‑/g, '-');\n      // eslint-disable-next-line\n      let answer = Math.round(1000000000000 * eval(expression)) / 1000000000000;\n      \n      setValue(answer.toString());\n      setFormula(expression.replace(/\\*/g, 'x').replace(/-/g,'‑')+ '=' + answer);\n      setPreval(answer);\n      setEvaluate(true);\n\n    }\n  }\n  \n\n  function handleOperator(e){\n    if(!currentValue.includes('Limit')){\n      const value = e.target.value;\n      setValue(value);\n      setEvaluate(false);\n      if(evaluated){\n        setFormula(preval + value);\n      } else if(!endsWithOperator.test(formula)){\n        setPreval(formula);\n        setFormula(formula + value);\n      } else if(!endWithNegativeSign.test(formula)){\n        setFormula(\n          (endWithNegativeSign.test(formula + value)\n          ? formula : preval) + value\n        )\n      } else if( value !== '‑'){\n        setFormula(preval + value)\n      }\n\n    }\n  }\n  \n  function handleNumbers(e){\n    if(!currentValue.includes('Limit')){ \n      const value =  e.target.value;\n      setEvaluate(false);\n      if(currentValue.length > 21){\n        maxDigitWarning();\n      } else if(evaluated){\n        setValue(value);\n        setFormula(\n          value !== '0' ? value : ''\n        )\n      }else{\n        setValue(\n          currentValue === '0' || isOperator.test(currentValue) \n          ? value : currentValue + value\n        )\n        \n        setFormula(\n          currentValue === '0' && value === '0'\n          ? formula === '' ? value : formula\n          : (/([^.0-9]0|^0)$/).test(formula)\n            ? formula.slice(0, -1) + value\n            : formula + value   \n        )\n        }\n    }  \n    \n  }\n  \n  function handleDecimal(){\n    if(evaluated === true){\n      setValue('0.');\n      setFormula('0.');\n      setEvaluate(false);\n    } else if(!currentValue.includes('.') && !currentValue.includes('Limit')){\n      setEvaluate(false);\n      if(currentValue.length > 21){\n        maxDigitWarning();\n      } else if(endsWithOperator.test(formula)||(currentValue ==='0' && formula === '')){\n          setValue('0.')\n          setFormula(formula + '0.')\n        } else{\n          setValue( formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.');\n          setFormula(formula + '.');\n          }\n  }\n} \n\n\n\n  function initialize(){\n    setValue('0');\n    setFormula('');\n    setPreval('0');\n    setEvaluate(false);\n  }\n  \n  return (\n    <div className='calculator' id=\"calculator\">\n      <Formula formula={formula}></Formula>\n      <Output currentValue={currentValue}></Output>\n      <Button \n        clear={initialize} \n        numbers={handleNumbers}\n        operators={handleOperator}\n        evaluate={handleEvaluate}\n        decimal={handleDecimal}\n      >\n      </Button>\n    </div>\n  );\n}","import React from 'react'\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <div >\r\n            <button className='bigBut clearBut' onClick={props.clear} id='clear'>AC</button>\r\n            <button onClick={props.operators} className='operator' id='divide' value='/'>/</button>\r\n            <button onClick={props.operators} className='operator' id='multiply' value='x'>x</button>\r\n            <button onClick={props.numbers} id='seven' value='7'>7</button>\r\n            <button onClick={props.numbers} id='eight' value='8'>8</button>\r\n            <button onClick={props.numbers} id='nine' value='9'>9</button>\r\n            <button onClick={props.operators} className='operator' id='subtract' value='‑'>-</button>\r\n            <button onClick={props.numbers} id='four' value='4'>4</button>\r\n            <button onClick={props.numbers} id='five' value='5'>5</button>\r\n            <button onClick={props.numbers} id='six' value='6'>6</button>\r\n            <button onClick={props.operators} className='operator' id='add' value='+'>+</button>\r\n            <button onClick={props.numbers} id='one' value='1'>1</button>\r\n            <button onClick={props.numbers} id='two' value='2'>2</button>\r\n            <button onClick={props.numbers} id='three' value='3'>3</button>\r\n            <button className='bigBut' onClick={props.numbers} id='zero' value='0'>0</button>\r\n            <button onClick={props.decimal} id='decimal' value='.'>.</button>\r\n            <button onClick={props.evaluate} className='equalBut' id='equals'>=</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Output(props) {\r\n    return (\r\n        <div className=\"outputDisplay\" id=\"display\">\r\n            {props.currentValue}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Formular(props) {\r\n    return (\r\n        <div className='formularDisplay'>\r\n            {props.formula}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}